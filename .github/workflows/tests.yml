name: Run Laravel Tests

on:
  push:
    branches: [ main ]
    paths:
      - '.github/**'
      - 'backend/**'
  pull_request:
    paths:
      - '.github/**'
      - 'backend/**'


jobs:
  tests:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: github
          POSTGRES_PASSWORD: github
          POSTGRES_DB: testing
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U github"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7
        env:
          REDIS_PASSWORD: github
        ports:
          - 6379:6379
        command: ["redis-server", "--requirepass", "github"]
        options: >-
          --health-cmd="redis-cli ping -a github"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, bcmath, pdo, pdo_pgsql, pgsql, tokenizer, xml, curl, json, openssl
          coverage: xdebug

      - name: Generate .env for CI
        run: |
          sed -i 's/^DB_USERNAME=.*/DB_USERNAME=github/' .env.testing
          sed -i 's/^DB_PASSWORD=.*/DB_PASSWORD=github/' .env.testing
          sed -i 's/^DB_DATABASE=.*/DB_DATABASE=testing/' .env.testing
          sed -i 's/^DB_HOST=.*/DB_HOST=0.0.0.0/' .env.testing
          sed -i 's/^REDIS_HOST=.*/REDIS_HOST=0.0.0.0/' .env.testing
          sed -i 's/^REDIS_PASSWORD=.*/REDIS_PASSWORD=github/' .env.testing
          sed -i 's/^REDIS_PORT=.*/REDIS_PORT=6379/' .env.testing

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run migrations
        run: php artisan migrate --env=testing --force
      
      - name: Run tests with coverage
        run: php artisan test --env=testing --coverage-clover=coverage.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
